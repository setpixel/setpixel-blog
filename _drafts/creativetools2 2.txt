I am writing a screenplay in Fountain. If you are writing a screenplay, I would highly recommend it. Fountain offers not only a great way to write a screenplay, but also flexibility to create new tools to help you conceputalize, visualize, and realize a really great story.

I am deep in the process of writing my first screenplay. When I first started, I just opened my text editor and wrote. I didn't concern myself with the specifics of the standard screenplay format. I really didn't think it mattered as long as I was putting my ideas down. 

As I got deeper in the process, I started to send my writing to other people to get feedback. I needed to get it in the standard format, so the conversation would be about my work, and not how my formatting is all wrong.

"You have to use Final Draft."

I dont work at a bank. But I'm sure at the first day of orientation, they teach you how to use an application written in 1999 in Visual Basic. It hasn't been updated since 2001, it doesn't work very well, everyone hates it, but it's the way it is, and if you trick it, you might be able to do what you want, or wait until it's 5pm. It's probably exactly what it's like to use Final Draft.

The joy of writing shouldn't feel like working at a bank.

You should feel free and unlimited, focusing on the challenges and opportunities of creating a great story, the least of which are how well your screenplay is formatted.

What is a screenplay?

At a high level, the conceptual basics of a screenplay are very simple. First, it is just text. Secondly, that text is used to describe 5 basic things: location for a scene (and time of day), action, character, parenthetical, and dialogue. There are 5 basic metatypes. As long as you write where a scene takes place, what happens, who says what, and maybe a little of how they say it, you have the basics of a screenplay.

Knowing this, when you are writing, it shouldn't really matter what format you write it in. It's just text. You should be able to use any text editor you want, just so long as the metatypes are clearly defined.

I was delighted to find Fountain. Fountain is a very simple way to write a screenplay using just plain text. In fact, it pretty much looks like a screenplay when you're writing it. Fountain is a way to write. It is not software. You just write. 

Here is an example of some fountain text:

INT. CHARLES'S APARTMENT - DAY

Charles sits at a desk, typing on his computer. David sits behind him on a couch with his laptop.

CHARLES
(to David)
I think I'm going to write this in Fountain.

DAVID
Never heard of it.

CHARLES
I think you're going to like it.

It's very simple. A location always starts with INT. or EXT. and is in all caps. Characters are in all caps. Dialoue is plainly written after characters.

It is super easy to write in Fountain.

http://fountain.io/_img/fountain-quickreference.jpg
http://fountain.io/syntax

What do you do with a Fountain file?

After 12 days of writing, I had a rough draft of my script as a fountain text file. I wanted to see it in screenplay format. I wanted to send it to my mom for critical review. She's mad old. She only uses Final Draft.

With a fountain file, you can use an app that converts it to PDF or Final Draft. I used an app called Slugline. It's really well built software. Bonus: it's also very nice to write in. 

So I converted it to a Final Draft file in 3 clicks. I sent it to my mom's AOL account. SPOILER: She loved it. I converted it to a PDF and sent it to my friends. They tell me its very good, despite no concrete references to the script itself. I'll assume they definately did read it.

After converting it to PDF, from top to bottom, I read it. Something was very wrong. Somehow, the dialogue was all off. Characters were underdeveloped. The pacing was not right. Scenes were missing. Some scenes didn't make sense. This was no fault of Fountain. I had written a shitty screenplay, also known as a rough draft.

I needed to tear it apart and put it back together again. I needed to edit.

Editing 120 pages of anything is difficult, even if you yourself wrote them. With that much text, it's easy to be knit-picky about the fine details of the writing (grammar, word choice, tone), but harder to see the bigger picture (pacing, character development, scene editing, is this a good story?) With everything I do, I always try to think about the micro details how they relate to the macro concepts. Managing the micro and the macro is very difficult with a lot of text.

I wanted a tool that took my current draft, showed me all my scenes with notes, with what page the scene was on. I could print this out. I could put all the printed pages on the floor. I could see my whole story. When my script is being read to me, I could take macro notes. I could quickly add scenes, I could cut scenes, I could make a note about dialogue. I'm essentially describing reoutlining. 

With what follows, I imagine most writers will disreguard as irrelevant to them, roll their eyes, and simply stop reading. However, this is the aspect of Fountain that is the most interesting as a potentially limitless creative screenwriting format: the ability to build tools.

I decided I would build the tool.

“We humans are tool builders. And we can fashion tools that amplify these inherent abilities that we have to spectacular magnitudes. So for me, a computer has always been a bicycle of the mind — something that takes us far beyond our inherent abilities.” - Abraham Lincoln. 

Creative tools are in their relative infancy.

One of the great things about Fountain, is that its just markup text. It is easily parsed by a short list of regular expressions into tokens. With that data, you can do anything you want. Luckily, the fountain community has written some open source software for parsing in a bunch of different languages, including Javascript.

And I love Javascript lately. It runs everywhere: on your computer, on your phone. Its crazy fast. You can use the DOM to render out things effortlessly. It is forgiving. Great developer tools. Tons of open source. It is an amazing tool to prototype almost anything, and even a great tool to make something suitable for production. 

As a toolmaker, 90% of the value of the work is creating the design for a tool that solves your problem. As an engineer, writing code is trivial. Even though actually writing the code is most of the work, the real value is coming up with the tool. You don't have to be an engineer to come up with a tool. You don't have to be an engineer to refine a tool.

Demos

Outline

Word cloud

Someone messaged me on twitter. They wanted a word cloud of their fountain script. ..

Basic Stats


Screenplay visualizer

Tool to get a sense of time size of scenes
Scene amount
Easy tool to storyboard




Future tool ideas

Beat sheet overlay 


--

Screenplay format

One view I made is a standard screenplay paginator. You can print or print to PDF a standard screenplay. One of the things lacking with fountain is a free screenplay converter. It wasn't that hard to create one. 



Model view controller

Mvc is a standard design pattern in software development. The model is the data. The controller performs logic on that data. The view is the output or interface. 

It's important to think of things at this level of abstraction. If you have a model, you can visualize the data in any way you dream up. 

Screenplay is a model. It's the data. With that data you can make any view you want. 

Because fountain is pretty flexible, you could add metadata for anything you might want to extend the screenplay. In my case, I have included pictures as reference. 

The point is, with the same screenplay fountain file, you could output: an outline, a storyboard, some stats, a wordcloud, a standard paginated screenplay, or any new screenplay format you dream up with music and videos and pictures. This idea is extremely powerful. 

The best part is that you don't have to build the tool, you just have to dream it up.  